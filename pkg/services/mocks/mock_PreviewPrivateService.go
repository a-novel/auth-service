// Code generated by mockery v2.33.2. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	models "github.com/a-novel/auth-service/pkg/models"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// PreviewPrivateService is an autogenerated mock type for the PreviewPrivateService type
type PreviewPrivateService struct {
	mock.Mock
}

type PreviewPrivateService_Expecter struct {
	mock *mock.Mock
}

func (_m *PreviewPrivateService) EXPECT() *PreviewPrivateService_Expecter {
	return &PreviewPrivateService_Expecter{mock: &_m.Mock}
}

// Preview provides a mock function with given fields: ctx, tokenRaw, now
func (_m *PreviewPrivateService) Preview(ctx context.Context, tokenRaw string, now time.Time) (*models.UserPreviewPrivate, error) {
	ret := _m.Called(ctx, tokenRaw, now)

	var r0 *models.UserPreviewPrivate
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Time) (*models.UserPreviewPrivate, error)); ok {
		return rf(ctx, tokenRaw, now)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Time) *models.UserPreviewPrivate); ok {
		r0 = rf(ctx, tokenRaw, now)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UserPreviewPrivate)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, time.Time) error); ok {
		r1 = rf(ctx, tokenRaw, now)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PreviewPrivateService_Preview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Preview'
type PreviewPrivateService_Preview_Call struct {
	*mock.Call
}

// Preview is a helper method to define mock.On call
//   - ctx context.Context
//   - tokenRaw string
//   - now time.Time
func (_e *PreviewPrivateService_Expecter) Preview(ctx interface{}, tokenRaw interface{}, now interface{}) *PreviewPrivateService_Preview_Call {
	return &PreviewPrivateService_Preview_Call{Call: _e.mock.On("Preview", ctx, tokenRaw, now)}
}

func (_c *PreviewPrivateService_Preview_Call) Run(run func(ctx context.Context, tokenRaw string, now time.Time)) *PreviewPrivateService_Preview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(time.Time))
	})
	return _c
}

func (_c *PreviewPrivateService_Preview_Call) Return(_a0 *models.UserPreviewPrivate, _a1 error) *PreviewPrivateService_Preview_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *PreviewPrivateService_Preview_Call) RunAndReturn(run func(context.Context, string, time.Time) (*models.UserPreviewPrivate, error)) *PreviewPrivateService_Preview_Call {
	_c.Call.Return(run)
	return _c
}

// NewPreviewPrivateService creates a new instance of PreviewPrivateService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPreviewPrivateService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PreviewPrivateService {
	mock := &PreviewPrivateService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
