// Code generated by mockery v2.33.2. DO NOT EDIT.

package servicesmocks

import (
	context "context"

	models "github.com/a-novel/auth-service/pkg/models"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// UpdatePasswordService is an autogenerated mock type for the UpdatePasswordService type
type UpdatePasswordService struct {
	mock.Mock
}

type UpdatePasswordService_Expecter struct {
	mock *mock.Mock
}

func (_m *UpdatePasswordService) EXPECT() *UpdatePasswordService_Expecter {
	return &UpdatePasswordService_Expecter{mock: &_m.Mock}
}

// UpdatePassword provides a mock function with given fields: ctx, form, now
func (_m *UpdatePasswordService) UpdatePassword(ctx context.Context, form models.UpdatePasswordForm, now time.Time) error {
	ret := _m.Called(ctx, form, now)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, models.UpdatePasswordForm, time.Time) error); ok {
		r0 = rf(ctx, form, now)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatePasswordService_UpdatePassword_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdatePassword'
type UpdatePasswordService_UpdatePassword_Call struct {
	*mock.Call
}

// UpdatePassword is a helper method to define mock.On call
//   - ctx context.Context
//   - form models.UpdatePasswordForm
//   - now time.Time
func (_e *UpdatePasswordService_Expecter) UpdatePassword(ctx interface{}, form interface{}, now interface{}) *UpdatePasswordService_UpdatePassword_Call {
	return &UpdatePasswordService_UpdatePassword_Call{Call: _e.mock.On("UpdatePassword", ctx, form, now)}
}

func (_c *UpdatePasswordService_UpdatePassword_Call) Run(run func(ctx context.Context, form models.UpdatePasswordForm, now time.Time)) *UpdatePasswordService_UpdatePassword_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(models.UpdatePasswordForm), args[2].(time.Time))
	})
	return _c
}

func (_c *UpdatePasswordService_UpdatePassword_Call) Return(_a0 error) *UpdatePasswordService_UpdatePassword_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *UpdatePasswordService_UpdatePassword_Call) RunAndReturn(run func(context.Context, models.UpdatePasswordForm, time.Time) error) *UpdatePasswordService_UpdatePassword_Call {
	_c.Call.Return(run)
	return _c
}

// NewUpdatePasswordService creates a new instance of UpdatePasswordService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUpdatePasswordService(t interface {
	mock.TestingT
	Cleanup(func())
}) *UpdatePasswordService {
	mock := &UpdatePasswordService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
