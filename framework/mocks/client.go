// Code generated by mockery v2.20.0. DO NOT EDIT.

package clientmocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/a-novel/auth-service/pkg/models"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

type Client_Expecter struct {
	mock *mock.Mock
}

func (_m *Client) EXPECT() *Client_Expecter {
	return &Client_Expecter{mock: &_m.Mock}
}

// IntrospectToken provides a mock function with given fields: ctx, token
func (_m *Client) IntrospectToken(ctx context.Context, token string) (*models.UserTokenStatus, error) {
	ret := _m.Called(ctx, token)

	var r0 *models.UserTokenStatus
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.UserTokenStatus, error)); ok {
		return rf(ctx, token)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.UserTokenStatus); ok {
		r0 = rf(ctx, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UserTokenStatus)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Client_IntrospectToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IntrospectToken'
type Client_IntrospectToken_Call struct {
	*mock.Call
}

// IntrospectToken is a helper method to define mock.On call
//   - ctx context.Context
//   - token string
func (_e *Client_Expecter) IntrospectToken(ctx interface{}, token interface{}) *Client_IntrospectToken_Call {
	return &Client_IntrospectToken_Call{Call: _e.mock.On("IntrospectToken", ctx, token)}
}

func (_c *Client_IntrospectToken_Call) Run(run func(ctx context.Context, token string)) *Client_IntrospectToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *Client_IntrospectToken_Call) Return(_a0 *models.UserTokenStatus, _a1 error) *Client_IntrospectToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Client_IntrospectToken_Call) RunAndReturn(run func(context.Context, string) (*models.UserTokenStatus, error)) *Client_IntrospectToken_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewClient creates a new instance of Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewClient(t mockConstructorTestingTNewClient) *Client {
	mock := &Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
